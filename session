let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/GithubProjects/z3-interp-plus
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +106 src/ast/rewriter/arith_rewriter.h
badd +0 src/ast/rewriter/arith_rewriter.cpp
badd +27 src/ast/rewriter/poly_rewriter.h
badd +10 src/ast/rewriter/arith_rewriter_params.hpp
badd +523 src/ast/rewriter/th_rewriter.cpp
badd +374 src/ast/rewriter/rewriter.h
badd +55 src/util/trace.h
argglobal
%argdel
edit src/ast/rewriter/arith_rewriter.cpp
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
3wincmd h
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
2wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
wincmd w
wincmd w
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 41 + 28) / 56)
exe 'vert 1resize ' . ((&columns * 73 + 144) / 288)
exe '2resize ' . ((&lines * 41 + 28) / 56)
exe 'vert 2resize ' . ((&columns * 68 + 144) / 288)
exe '3resize ' . ((&lines * 10 + 28) / 56)
exe 'vert 3resize ' . ((&columns * 142 + 144) / 288)
exe '4resize ' . ((&lines * 1 + 28) / 56)
exe 'vert 4resize ' . ((&columns * 142 + 144) / 288)
exe 'vert 5resize ' . ((&columns * 43 + 144) / 288)
exe 'vert 6resize ' . ((&columns * 48 + 144) / 288)
exe '7resize ' . ((&lines * 41 + 28) / 56)
exe 'vert 7resize ' . ((&columns * 52 + 144) / 288)
exe '8resize ' . ((&lines * 12 + 28) / 56)
exe 'vert 8resize ' . ((&columns * 52 + 144) / 288)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 367 - ((20 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
367
normal! 0
wincmd w
argglobal
if bufexists("src/ast/rewriter/arith_rewriter.cpp") | buffer src/ast/rewriter/arith_rewriter.cpp | else | edit src/ast/rewriter/arith_rewriter.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 509 - ((26 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
509
normal! 016|
wincmd w
argglobal
if bufexists("src/ast/rewriter/arith_rewriter.cpp") | buffer src/ast/rewriter/arith_rewriter.cpp | else | edit src/ast/rewriter/arith_rewriter.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 52 - ((1 * winheight(0) + 5) / 10)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
52
normal! 015|
wincmd w
argglobal
if bufexists("src/ast/rewriter/arith_rewriter.h") | buffer src/ast/rewriter/arith_rewriter.h | else | edit src/ast/rewriter/arith_rewriter.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 106 - ((0 * winheight(0) + 0) / 1)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
106
normal! 0
wincmd w
argglobal
if bufexists("src/ast/rewriter/poly_rewriter.h") | buffer src/ast/rewriter/poly_rewriter.h | else | edit src/ast/rewriter/poly_rewriter.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 27 - ((6 * winheight(0) + 27) / 54)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
27
normal! 04|
wincmd w
argglobal
if bufexists("src/ast/rewriter/arith_rewriter_params.hpp") | buffer src/ast/rewriter/arith_rewriter_params.hpp | else | edit src/ast/rewriter/arith_rewriter_params.hpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 42 - ((24 * winheight(0) + 27) / 54)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
42
normal! 02|
wincmd w
argglobal
if bufexists("src/ast/rewriter/th_rewriter.cpp") | buffer src/ast/rewriter/th_rewriter.cpp | else | edit src/ast/rewriter/th_rewriter.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 182 - ((1 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
182
normal! 020|
wincmd w
argglobal
if bufexists("src/ast/rewriter/th_rewriter.cpp") | buffer src/ast/rewriter/th_rewriter.cpp | else | edit src/ast/rewriter/th_rewriter.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 44 - ((6 * winheight(0) + 6) / 12)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
44
normal! 02|
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 41 + 28) / 56)
exe 'vert 1resize ' . ((&columns * 73 + 144) / 288)
exe '2resize ' . ((&lines * 41 + 28) / 56)
exe 'vert 2resize ' . ((&columns * 68 + 144) / 288)
exe '3resize ' . ((&lines * 10 + 28) / 56)
exe 'vert 3resize ' . ((&columns * 142 + 144) / 288)
exe '4resize ' . ((&lines * 1 + 28) / 56)
exe 'vert 4resize ' . ((&columns * 142 + 144) / 288)
exe 'vert 5resize ' . ((&columns * 43 + 144) / 288)
exe 'vert 6resize ' . ((&columns * 48 + 144) / 288)
exe '7resize ' . ((&lines * 41 + 28) / 56)
exe 'vert 7resize ' . ((&columns * 52 + 144) / 288)
exe '8resize ' . ((&lines * 12 + 28) / 56)
exe 'vert 8resize ' . ((&columns * 52 + 144) / 288)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
