let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/GithubProjects/z3-interp-plus
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1079 src/api/c++/z3++.h
badd +707 src/api/api_ast.cpp
badd +34 src/ast/rewriter/th_rewriter.h
badd +30 src/test/arith_rewriter.cpp
badd +197 src/ast/rewriter/arith_rewriter.h
badd +1709 src/ast/rewriter/arith_rewriter.cpp
badd +371 src/ast/arith_decl_plugin.h
badd +2259 src/ast/ast.h
badd +112 src/util/obj_ref.h
badd +1 src/ast/arith_decl_plugin.cpp
argglobal
%argdel
edit src/ast/arith_decl_plugin.h
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
2wincmd k
wincmd w
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 23 + 37) / 74)
exe 'vert 1resize ' . ((&columns * 137 + 138) / 276)
exe '2resize ' . ((&lines * 24 + 37) / 74)
exe 'vert 2resize ' . ((&columns * 137 + 138) / 276)
exe '3resize ' . ((&lines * 23 + 37) / 74)
exe 'vert 3resize ' . ((&columns * 137 + 138) / 276)
exe 'vert 4resize ' . ((&columns * 138 + 138) / 276)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 159 - ((2 * winheight(0) + 11) / 23)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
159
normal! 0
wincmd w
argglobal
if bufexists("src/ast/rewriter/arith_rewriter.h") | buffer src/ast/rewriter/arith_rewriter.h | else | edit src/ast/rewriter/arith_rewriter.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 31 - ((5 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
31
normal! 0
wincmd w
argglobal
if bufexists("src/ast/rewriter/arith_rewriter.h") | buffer src/ast/rewriter/arith_rewriter.h | else | edit src/ast/rewriter/arith_rewriter.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 198 - ((14 * winheight(0) + 11) / 23)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
198
normal! 012|
wincmd w
argglobal
if bufexists("src/ast/rewriter/arith_rewriter.cpp") | buffer src/ast/rewriter/arith_rewriter.cpp | else | edit src/ast/rewriter/arith_rewriter.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1758 - ((55 * winheight(0) + 36) / 72)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1758
normal! 03|
wincmd w
4wincmd w
exe '1resize ' . ((&lines * 23 + 37) / 74)
exe 'vert 1resize ' . ((&columns * 137 + 138) / 276)
exe '2resize ' . ((&lines * 24 + 37) / 74)
exe 'vert 2resize ' . ((&columns * 137 + 138) / 276)
exe '3resize ' . ((&lines * 23 + 37) / 74)
exe 'vert 3resize ' . ((&columns * 137 + 138) / 276)
exe 'vert 4resize ' . ((&columns * 138 + 138) / 276)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
